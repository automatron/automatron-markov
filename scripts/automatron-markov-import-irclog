#! /usr/bin/env python

import re
import sys
from automatron_markov import build_prefix
from automatron_redis import build_redis_config
from automatron_markov.learn import learn_phrase, parse_line
from ConfigParser import SafeConfigParser
from redis import Redis


LOG_PARSE_RE = re.compile(r'(\d+:\d+|\[\d+:\d+]) <.*?> (.*)')


def parse_file(redis, prefix, fp):
    for line in fp:
        m = LOG_PARSE_RE.match(line)
        if not m:
            continue
        line = m.group(2).strip()

        phrases = parse_line(line)
        if not phrases:
            continue

        pipeline = redis.pipeline()

        for phrase in phrases:
            learn_phrase(pipeline, prefix, phrase)

        pipeline.execute()


def main(config_file_path, namespace, *filenames):
    config_file = SafeConfigParser()
    config_file.readfp(open(config_file_path))
    redis_config = build_redis_config(config_file, 'markov')

    r = Redis(
        host=redis_config['host'],
        port=redis_config['port'],
        db=redis_config['dbid'],
        password=redis_config['password'],
    )

    prefix = build_prefix(namespace)

    if filenames:
        for filename in filenames:
            print >>sys.stderr, 'Importing corpus from \'%s\'.' % filename
            with open(filename, 'r') as fp:
                parse_file(r, prefix, fp)
    else:
        print >>sys.stderr, 'Importing corpus from <stdin>.'
        parse_file(r, prefix, sys.stdin)


if __name__ == '__main__':
    if len(sys.argv) < 3:
        print 'Syntax: %s <config file> <namespace> [corpus file...]' % sys.argv[0]
        print ''
        print 'Hint: The default namespace is \'default\'.'
        print
        sys.exit(1)
    main(*sys.argv[1:])
